{"version":3,"file":"static/js/8941.dea7ff04.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail.tsx","../../../packages/core/BaseFeatureWidget/util.tsx"],"sourcesContent":["import React, { lazy, useRef, useState, useEffect, Suspense } from 'react'\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport copy from 'copy-to-clipboard'\n\n// locals\nimport { getSession, useLocalStorage } from '../util'\nimport { BaseProps } from './types'\nimport { getConf } from '../configuration'\nimport { Feature, SimpleFeatureSerialized } from '../util/simpleFeature'\nimport { ParentFeat, SeqState, ErrorState } from './util'\nimport { LoadingEllipses } from '../ui'\n\n// icons\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport HelpIcon from '@mui/icons-material/Help'\n\n// lazies\nconst SettingsDlg = lazy(() => import('./SequenceFeatureSettingsDialog'))\nconst HelpDlg = lazy(() => import('./SequenceHelpDialog'))\nconst SequencePanel = lazy(() => import('./SequencePanel'))\n\ninterface CoordFeat extends SimpleFeatureSerialized {\n  refName: string\n  start: number\n  end: number\n}\n\nconst useStyles = makeStyles()(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: 0,\n  },\n  container: {\n    margin: theme.spacing(1),\n  },\n  container2: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst BPLIMIT = 500_000\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeatureDetails({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const parentFeature = feature as unknown as ParentFeat\n  const hasCDS = !!parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const isGene = feature.type === 'gene'\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n\n  return (isGene && !hasCDS) || !model ? null : (\n    <div className={classes.container2}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      <br />\n      {shown ? <FeatureSequence model={model} feature={feature} /> : null}\n      {helpShown ? (\n        <Suspense fallback={<div />}>\n          <HelpDlg handleClose={() => setHelpShown(false)} />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n\nfunction FeatureSequence({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const parentFeature = feature as unknown as ParentFeat\n  const hasCDS = !!parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n  const [settingsDlgOpen, setSettingsDlgOpen] = useState(false)\n  const [intronBp, setIntronBp] = useLocalStorage('intronBp', 10)\n  const [upDownBp, setUpDownBp] = useLocalStorage('upDownBp', 500)\n  const [sequence, setSequence] = useState<SeqState | ErrorState>()\n  const [error, setError] = useState<unknown>()\n  const [copied, setCopied] = useState(false)\n  const [copiedHtml, setCopiedHtml] = useState(false)\n  const [forceLoad, setForceLoad] = useState({\n    id: feature.uniqueId,\n    force: false,\n  })\n\n  useEffect(() => {\n    setForceLoad({\n      id: feature.uniqueId,\n      force: false,\n    })\n  }, [feature])\n\n  useEffect(() => {\n    let finished = false\n    if (!model) {\n      return () => {}\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const [assemblyName] = model.view?.assemblyNames || []\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        regions: [\n          {\n            start,\n            end,\n            refName: assembly.getCanonicalRefName(refName),\n            assemblyName,\n          },\n        ],\n      })\n\n      const [feat] = feats as Feature[]\n      return (feat?.get('seq') as string | undefined) || ''\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        setError(undefined)\n        const { start, end, refName } = feature as CoordFeat\n\n        if (!forceLoad.force && end - start > BPLIMIT) {\n          setSequence({\n            error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n          })\n        } else {\n          const seq = await fetchSeq(start, end, refName)\n          const up = await fetchSeq(\n            Math.max(0, start - upDownBp),\n            start,\n            refName,\n          )\n          const down = await fetchSeq(end, end + upDownBp, refName)\n          if (!finished) {\n            setSequence({ seq, upstream: up, downstream: down })\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n\n    return () => {\n      finished = true\n    }\n  }, [feature, model, upDownBp, forceLoad])\n\n  const loading = !sequence\n\n  const session = getSession(model)\n  const defaultSeqTypes = ['mRNA', 'transcript', 'gene']\n  const sequenceTypes =\n    getConf(session, ['featureDetails', 'sequenceTypes']) || defaultSeqTypes\n\n  // only attempt fetching gene type sequence on a bare CDS if it has no parent\n  const attemptGeneType =\n    feature.type === 'CDS'\n      ? sequenceTypes.includes('CDS') && !feature.parentId\n      : sequenceTypes.includes(feature.type)\n  const val = attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic'\n\n  // this useEffect is needed to reset the mode/setMode useState because the\n  // contents of the select box can completely change depending on whether we\n  // click on a gene feature or non-gene feature, so the current value in the\n  // select box must change accordingly\n  useEffect(() => {\n    setMode(val)\n  }, [attemptGeneType, val])\n\n  const [mode, setMode] = useState(\n    attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic',\n  )\n\n  const rest = {\n    gene: 'Gene w/ introns',\n    gene_collapsed_intron: `Gene w/ ${intronBp}bp of intron`,\n    gene_updownstream: `Gene w/ ${upDownBp}bp up+down stream`,\n    gene_updownstream_collapsed_intron: `Gene w/ ${upDownBp}bp up+down stream w/ ${intronBp}bp intron`,\n    cdna: 'cDNA',\n  }\n\n  const arg = attemptGeneType\n    ? hasCDS\n      ? {\n          cds: 'CDS',\n          protein: 'Protein',\n          ...rest,\n        }\n      : rest\n    : {\n        genomic: 'Genomic seq',\n        genomic_sequence_updown: `Genomic seq w/ ${upDownBp}bp up+down stream`,\n      }\n  return (\n    <div className={classes.container2}>\n      <FormControl className={classes.formControl}>\n        <Select value={mode} onChange={event => setMode(event.target.value)}>\n          {Object.entries(arg).map(([key, val]) => (\n            <MenuItem key={key} value={key}>\n              {val}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          onClick={() => {\n            const ref = seqPanelRef.current\n            if (ref) {\n              copy(ref.textContent || '', { format: 'text/plain' })\n              setCopied(true)\n              setTimeout(() => setCopied(false), 1000)\n            }\n          }}\n        >\n          {copied ? 'Copied to clipboard!' : 'Copy plaintext'}\n        </Button>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Tooltip title=\"The 'Copy HTML' function retains the colors from the sequence panel but cannot be pasted into some programs like notepad that only expect plain text\">\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              const ref = seqPanelRef.current\n              if (ref) {\n                copy(ref.innerHTML, { format: 'text/html' })\n                setCopiedHtml(true)\n                setTimeout(() => setCopiedHtml(false), 1000)\n              }\n            }}\n          >\n            {copiedHtml ? 'Copied to clipboard!' : 'Copy HTML'}\n          </Button>\n        </Tooltip>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setSettingsDlgOpen(true)}>\n          <SettingsIcon />\n        </IconButton>\n      </FormControl>\n\n      <br />\n      {error ? (\n        <Typography color=\"error\">{`${error}`}</Typography>\n      ) : loading ? (\n        <LoadingEllipses />\n      ) : sequence ? (\n        'error' in sequence ? (\n          <>\n            <Typography color=\"error\">{sequence.error}</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"inherit\"\n              onClick={() => setForceLoad({ ...forceLoad, force: true })}\n            >\n              Force load\n            </Button>\n          </>\n        ) : (\n          <Suspense fallback={<div>Loading</div>}>\n            <SequencePanel\n              ref={seqPanelRef}\n              feature={parentFeature}\n              mode={mode}\n              sequence={sequence}\n              intronBp={intronBp}\n            />\n          </Suspense>\n        )\n      ) : (\n        <Typography>No sequence found</Typography>\n      )}\n\n      {settingsDlgOpen ? (\n        <Suspense fallback={<div />}>\n          <SettingsDlg\n            handleClose={arg => {\n              if (arg) {\n                const { upDownBp, intronBp } = arg\n                setIntronBp(intronBp)\n                setUpDownBp(upDownBp)\n              }\n              setSettingsDlgOpen(false)\n            }}\n            upDownBp={upDownBp}\n            intronBp={intronBp}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Link,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// icons\nimport ExpandMore from '@mui/icons-material/ExpandMore'\n\n// locals\nimport {\n  measureText,\n  measureGridWidth,\n  getStr,\n  getEnv,\n  getSession,\n  getUriLink,\n  isUriLocation,\n  assembleLocString,\n  ParsedLocString,\n} from '../util'\nimport { ErrorMessage, SanitizedHTML } from '../ui'\nimport SequenceFeatureDetails from './SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from './types'\nimport { SimpleFeatureSerializedNoId } from '../util/simpleFeature'\nimport { ellipses } from './util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.action.disabledBackground,\n    border: `1px solid ${theme.palette.action.disabledBackground}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport function SimpleValue({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nfunction ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\nconst toLocale = (n: number) => n.toLocaleString('en-US')\n\nfunction Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  // @ts-expect-error\n  const loc = assembleLocString(feature as ParsedLocString)\n  return <>{`${loc} ${str}`}</>\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerializedNoId & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleValue\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleValue key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\nexport function UriLink({\n  value,\n}: {\n  value: { uri: string; baseUri?: string }\n}) {\n  const href = getUriLink(value)\n  return <SanitizedHTML html={`<a href=\"${href}\">${href}</a>`} />\n}\n\nfunction DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>[]\n}) {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      } as { [key: string]: unknown }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return isUriLocation(value) ? <UriLink value={value} /> : getStr(value)\n      },\n      width: measureGridWidth(rows.map(r => r[val])),\n    }))\n\n    const rowHeight = 25\n    const hideFoot = rows.length < 100\n    const headHeight = 80\n    const height =\n      Math.min(rows.length, 100) * rowHeight + headHeight + (hideFoot ? 0 : 50)\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height,\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableSelectionOnClick\n            rowHeight={rowHeight}\n            rows={rows}\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={hideFoot}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// pick using a path from an object, similar to _.get from lodash with special logic\n// for Descriptions from e.g. VCF headers\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nfunction generateMaxWidth(array: unknown[][], prefix: any) {\n  const arr = [] as number[]\n  array.forEach(key => {\n    const val = [...prefix, key[0]].join('.')\n    arr.push(measureText(val, 12))\n  })\n\n  return Math.ceil(Math.max(...arr)) + 10\n}\n\nfunction UriAttribute({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n\nexport function Attributes(props: {\n  attributes: Record<string, any>\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...rest}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleValue\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nfunction generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerializedNoId\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { mate, name = '', id = '', type = '', subfeatures } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {mate ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          {/* @ts-expect-error */}\n          <CoreDetails {...props} feature={mate} />\n        </>\n      ) : null}\n      <Divider />\n\n      <Typography>Attributes</Typography>\n\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary\n        FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n      >\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map(sub => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={sub}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nexport default observer(function ({ model }: BaseInputProps) {\n  const { featureData } = model\n\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const g = JSON.parse(\n    JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)),\n  )\n  return isEmpty(g) ? null : <FeatureDetails model={model} feature={g} />\n})\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\n// calculates UTRs using impliedUTRs logic\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n"],"names":["SettingsDlg","lazy","HelpDlg","SequencePanel","useStyles","makeStyles","theme","button","margin","spacing","formControl","container","container2","marginTop","BPLIMIT","SequenceFeatureDetails","_ref","_parentFeature$subfea","model","feature","classes","hasCDS","subfeatures","find","sub","type","isGene","_useState","useState","_useState2","_slicedToArray","shown","setShown","_useState3","_useState4","helpShown","setHelpShown","_jsxs","className","children","_jsx","Button","variant","onClick","FormControl","IconButton","HelpIcon","FeatureSequence","Suspense","fallback","handleClose","_ref2","_parentFeature$subfea2","parentFeature","seqPanelRef","useRef","_useState5","_useState6","settingsDlgOpen","setSettingsDlgOpen","_useLocalStorage","useLocalStorage","_useLocalStorage2","intronBp","setIntronBp","_useLocalStorage3","_useLocalStorage4","upDownBp","setUpDownBp","_useState7","_useState8","sequence","setSequence","_useState9","_useState10","error","setError","_useState11","_useState12","copied","setCopied","_useState13","_useState14","copiedHtml","setCopiedHtml","_useState15","id","uniqueId","force","_useState16","forceLoad","setForceLoad","useEffect","_model$view","finished","_getSession","getSession","assemblyManager","rpcManager","_ref3","view","assemblyNames","assemblyName","fetchSeq","_x","_x2","_x3","_fetchSeq","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","start","end","refName","assembly","sessionId","feats","_ref7","_ref8","feat","wrap","_context2","prev","next","waitForAssembly","sent","Error","call","adapterConfig","getConf","regions","getCanonicalRefName","abrupt","get","stop","_callee","_ref6","seq","up","down","_context","undefined","concat","Math","max","upstream","downstream","t0","console","loading","session","sequenceTypes","attemptGeneType","includes","parentId","val","setMode","_useState17","_useState18","mode","rest","gene","gene_collapsed_intron","gene_updownstream","gene_updownstream_collapsed_intron","cdna","arg","_objectSpread","cds","protein","genomic","genomic_sequence_updown","Select","value","onChange","event","target","Object","entries","map","_ref9","_ref10","key","MenuItem","ref","current","copy","textContent","format","setTimeout","Tooltip","title","innerHTML","SettingsIcon","Typography","color","LoadingEllipses","_Fragment","MAX_FIELD_NAME_WIDTH","globalOmit","coreDetails","_theme$palette$tertia","expansionPanelDetails","display","padding","expandIcon","palette","tertiary","contrastText","field","flexWrap","fieldDescription","background","fieldName","wordBreak","minWidth","borderBottom","fontSize","action","disabledBackground","marginRight","fieldValue","maxHeight","overflow","fieldSubvalue","border","boxSizing","BaseCard","_ref$defaultExpanded","defaultExpanded","expanded","setExpanded","Accordion","s","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","AccordionDetails","FieldName","description","name","width","_ref2$prefix","prefix","_useStyles2","cx","_toConsumableArray","join","placement","style","BasicValue","isLink","match","React","Link","href","SanitizedHTML","html","isObject","JSON","stringify","String","SimpleValue","_ref4","ArrayValue","_ref5","_ref5$prefix","length","Attributes","attributes","every","i","toLocale","n","toLocaleString","Position","props","strand","strandMap","str","loc","assembleLocString","CoreDetails","obj","formattedFeat","__jbrowsefmt","displayedDetails","filter","_ref11","BaseCoreDetails","UriLink","_ref12","getUriLink","DataGridDetails","_ref13","_step","keys","sort","unionKeys","Set","_iterator","_createForOfIteratorHelper","done","_i","_Object$keys","k","add","err","e","f","size","colNames","rows","_ref14","_ref15","_objectWithoutProperties","_excluded","identifier","has","delete","columns","renderCell","params","isUriLocation","getStr","measureGridWidth","r","hideFoot","height","min","DataGrid","disableSelectionOnClick","rowHeight","hideFooterSelectedRowCount","hideFooter","UriAttribute","_ref16","uri","_value$baseUri","baseUri","URL","_props$omit","omit","_props$omitSingleLeve","omitSingleLevel","descriptions","_props$formatter","formatter","hideUris","_props$prefix","omits","_excluded2","formattedAttributes","maxLabelWidth","array","arr","forEach","push","measureText","ceil","generateMaxWidth","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_obj","elt","Description","accessNested","Array","isArray","_excluded3","_createElement","BaseAttributes","generateTitle","ellipses","FeatureDetails","_props$omit2","_props$depth","depth","mate","_feature$name","_feature$id","_feature$type","pm","getEnv","pluginManager","ExtraPanel","evaluateExtensionPoint","Divider","ErrorBoundary","FallbackComponent","_ref23","ErrorMessage","Component","observer","_ref24","featureData","g","parse","_","v","stitch","subfeats","slice","getItemId","dedupe","list","item","pos","ary","revlist","seqlen","a","b","calculateUTRs","exons","firstCds","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","threeUTRs","calculateUTRs2","parentFeat","slug"],"sourceRoot":""}