{"version":3,"file":"static/js/1960.aa55eb75.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ResizeBar.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetFilters.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedDialog.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.divider,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onDrag: (arg: number, idx: number) => void\n}) {\n  const { classes } = useStyles()\n  const cb = useCallback(\n    (d: number) => {\n      onDrag(d, idx)\n    },\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={cb}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  let init = checkbox ? 52 : 0\n  for (let i = 0; i < widths.length; i++) {\n    const width = widths[i]\n    offsets[i] = width + init\n    init += width\n  }\n\n  const onDrag = useCallback(\n    (distance: number, idx: number) => {\n      const newWidths = [...widths]\n      // mui doesn't allow columns smaller than 50\n      newWidths[idx] = Math.max(newWidths[idx] + distance, 50)\n      setWidths(newWidths)\n    },\n    [widths, setWidths],\n  )\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={onDrag}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Grid, IconButton, InputAdornment, TextField } from '@mui/material'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MoreVert from '@mui/icons-material/MoreVert'\n\n// locals\nimport ShoppingCart from '../ShoppingCart'\nimport { HierarchicalTrackSelectorModel } from '../../model'\n\nexport default function FacetedHeader({\n  setFilterText,\n  setUseShoppingCart,\n  setHideSparse,\n  hideSparse,\n  useShoppingCart,\n  filterText,\n  model,\n}: {\n  setFilterText: (arg: string) => void\n  setUseShoppingCart: (arg: boolean) => void\n  setHideSparse: (arg: boolean) => void\n  filterText: string\n  useShoppingCart: boolean\n  hideSparse: boolean\n  model: HierarchicalTrackSelectorModel\n}) {\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n  return (\n    <>\n      <Grid container spacing={4} alignItems=\"center\">\n        <Grid item>\n          <TextField\n            label=\"Search...\"\n            value={filterText}\n            onChange={event => setFilterText(event.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setFilterText('')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <IconButton onClick={event => setAnchorEl(event.currentTarget)}>\n            <MoreVert />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <ShoppingCart model={model} />\n        </Grid>\n      </Grid>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        onMenuItemClick={(_event, callback) => {\n          callback()\n          setAnchorEl(null)\n        }}\n        menuItems={[\n          {\n            label: 'Add tracks to selection instead of turning them on/off',\n            onClick: () => setUseShoppingCart(!useShoppingCart),\n            type: 'checkbox',\n            checked: useShoppingCart,\n          },\n          {\n            label: 'Hide sparse metadata columns',\n            onClick: () => setHideSparse(!hideSparse),\n            checked: hideSparse,\n            type: 'checkbox',\n          },\n        ]}\n      />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  Typography,\n  FormControl,\n  Select,\n  IconButton,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icon\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport AddIcon from '@mui/icons-material/Add'\n\nconst useStyles = makeStyles()(theme => ({\n  facet: {\n    margin: 0,\n    marginLeft: theme.spacing(2),\n  },\n  select: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nfunction FacetFilter({\n  column,\n  vals,\n  width,\n  dispatch,\n  filters,\n}: {\n  column: { field: string }\n  vals: [string, number][]\n  width: number\n  dispatch: (arg: { key: string; val: string[] }) => void\n  filters: Record<string, string[]>\n}) {\n  const { classes } = useStyles()\n  const [visible, setVisible] = useState(true)\n  return (\n    <FormControl key={column.field} className={classes.facet} style={{ width }}>\n      <div style={{ display: 'flex' }}>\n        <Typography>{column.field}</Typography>\n        <Tooltip title=\"Clear selection on this facet filter\">\n          <IconButton\n            onClick={() => {\n              dispatch({ key: column.field, val: [] })\n            }}\n            size=\"small\"\n          >\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Minimize/expand this facet filter\">\n          <IconButton onClick={() => setVisible(!visible)} size=\"small\">\n            {visible ? <MinimizeIcon /> : <AddIcon />}\n          </IconButton>\n        </Tooltip>\n      </div>\n      {visible ? (\n        <Select\n          multiple\n          native\n          className={classes.select}\n          value={filters[column.field]}\n          onChange={event => {\n            // @ts-expect-error\n            const { options } = event.target\n            const val: string[] = []\n            const len = options.length\n            for (let i = 0; i < len; i++) {\n              if (options[i].selected) {\n                val.push(options[i].value)\n              }\n            }\n            dispatch({ key: column.field, val })\n          }}\n        >\n          {vals\n            .sort((a, b) => a[0].localeCompare(b[0]))\n            .map(([name, count]) => (\n              <option key={name} value={name}>\n                {name} ({count})\n              </option>\n            ))}\n        </Select>\n      ) : null}\n    </FormControl>\n  )\n}\n\nexport default function FacetFilters({\n  rows,\n  columns,\n  dispatch,\n  filters,\n  width,\n}: {\n  rows: Record<string, unknown>[]\n  filters: Record<string, string[]>\n  columns: { field: string }[]\n  dispatch: (arg: { key: string; val: string[] }) => void\n  width: number\n}) {\n  const facets = columns.slice(1)\n  const uniqs = facets.map(() => new Map<string, number>())\n  for (const row of rows) {\n    for (const [index, column] of facets.entries()) {\n      const elt = uniqs[index]\n      const key = `${row[column.field] || ''}`\n      const val = elt.get(key)\n      // we don't allow filtering on empty yet\n      if (key) {\n        if (val === undefined) {\n          elt.set(key, 1)\n        } else {\n          elt.set(key, val + 1)\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      {facets.map((column, index) => (\n        <FacetFilter\n          key={column.field}\n          vals={[...uniqs[index]]}\n          column={column}\n          width={width}\n          dispatch={dispatch}\n          filters={filters}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useMemo, useState, useEffect, useReducer } from 'react'\nimport { IconButton } from '@mui/material'\nimport { transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\n\n// jbrowse\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ResizeHandle, SanitizedHTML } from '@jbrowse/core/ui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport ResizeBar, { useResizeBar } from '@jbrowse/core/ui/ResizeBar'\nimport {\n  getEnv,\n  getSession,\n  measureGridWidth,\n  useDebounce,\n} from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport MoreHoriz from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { matches, HierarchicalTrackSelectorModel } from '../../model'\nimport FacetedHeader from './FacetedHeader'\nimport FacetFilters from './FacetFilters'\nimport { getRootKeys } from './util'\n\nconst nonMetadataKeys = ['category', 'adapter', 'description'] as const\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nconst frac = 0.75\n\nexport default observer(function FacetedSelector({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { assemblyNames, view, selection } = model\n  const { pluginManager } = getEnv(model)\n  const { ref, scrollLeft } = useResizeBar()\n\n  const [filterText, setFilterText] = useState('')\n  const [info, setInfo] = useState<InfoArgs>()\n  const [useShoppingCart, setUseShoppingCart] = useState(false)\n  const [hideSparse, setHideSparse] = useState(true)\n  const [panelWidth, setPanelWidth] = useState(400)\n\n  const assemblyName = assemblyNames[0]\n  const session = getSession(model)\n  const filterDebounced = useDebounce(filterText, 400)\n  const [filters, dispatch] = useReducer(\n    (\n      state: Record<string, string[]>,\n      update: { key: string; val: string[] },\n    ) => {\n      return { ...state, [update.key]: update.val }\n    },\n    {},\n  )\n\n  const rows = useMemo(() => {\n    // metadata is spread onto the object for easier access and sorting\n    // by the mui data grid (it's unable to sort by nested objects)\n    return model\n      .trackConfigurations(assemblyName)\n      .filter(conf => matches(filterDebounced, conf, session))\n      .map(track => {\n        const metadata = readConfObject(track, 'metadata')\n        return {\n          id: track.trackId,\n          conf: track,\n          name: getTrackName(track, session),\n          category: readConfObject(track, 'category')?.join(', '),\n          adapter: readConfObject(track, 'adapter')?.type,\n          description: readConfObject(track, 'description'),\n          metadata,\n          ...metadata,\n        }\n      })\n  }, [assemblyName, model, filterDebounced, session])\n\n  const filteredNonMetadataKeys = useMemo(\n    () =>\n      nonMetadataKeys.filter(f =>\n        !hideSparse ? true : rows.map(r => r[f]).filter(f => !!f).length > 5,\n      ),\n    [hideSparse, rows],\n  )\n\n  const filteredMetadataKeys = useMemo(\n    () =>\n      [...new Set(rows.flatMap(row => getRootKeys(row.metadata)))].filter(f =>\n        !hideSparse\n          ? true\n          : rows.map(r => r.metadata[f]).filter(f => !!f).length > 5,\n      ),\n    [hideSparse, rows],\n  )\n\n  const fields = useMemo(() => {\n    return ['name', ...filteredNonMetadataKeys, ...filteredMetadataKeys]\n  }, [filteredNonMetadataKeys, filteredMetadataKeys])\n\n  const [widths, setWidths] = useState({\n    name:\n      measureGridWidth(\n        rows.map(r => r.name),\n        { maxWidth: 500, stripHTML: true },\n      ) + 15,\n    ...Object.fromEntries(\n      filteredNonMetadataKeys.map(e => [\n        e,\n        measureGridWidth(\n          rows.map(r => r[e]),\n          { maxWidth: 400, stripHTML: true },\n        ),\n      ]),\n    ),\n    ...Object.fromEntries(\n      filteredMetadataKeys.map(e => [\n        e,\n        measureGridWidth(\n          rows.map(r => r.metadata[e]),\n          { maxWidth: 400, stripHTML: true },\n        ),\n      ]),\n    ),\n  } as { [key: string]: number })\n\n  const [visible, setVisible] = useState(\n    Object.fromEntries(fields.map(c => [c, true])),\n  )\n  useEffect(() => {\n    setVisible(visible => ({\n      ...Object.fromEntries(fields.map(c => [c, true])),\n      ...visible,\n    }))\n  }, [fields])\n\n  useEffect(() => {\n    setWidths(widths => ({\n      name: widths.name,\n      ...Object.fromEntries(\n        filteredNonMetadataKeys\n          .filter(f => visible[f])\n          .map(e => [\n            e,\n            measureGridWidth(\n              rows.map(r => r[e]),\n              { stripHTML: true, maxWidth: 400 },\n            ),\n          ]),\n      ),\n      ...Object.fromEntries(\n        filteredMetadataKeys\n          .filter(f => visible[f])\n          .map(e => [\n            e,\n            measureGridWidth(\n              rows.map(r => r.metadata[e]),\n              { stripHTML: true, maxWidth: 400 },\n            ),\n          ]),\n      ),\n    }))\n  }, [filteredMetadataKeys, visible, filteredNonMetadataKeys, hideSparse, rows])\n\n  const widthsDebounced = useDebounce(widths, 400)\n\n  const columns = [\n    {\n      field: 'name',\n      hideable: false,\n      renderCell: (params: GridCellParams) => {\n        const { value, id, row } = params\n        return (\n          <>\n            <SanitizedHTML html={value} />\n            <IconButton\n              onClick={e =>\n                setInfo({\n                  target: e.currentTarget,\n                  id: id as string,\n                  conf: row.conf,\n                })\n              }\n            >\n              <MoreHoriz />\n            </IconButton>\n          </>\n        )\n      },\n      width: widthsDebounced.name || 100, // can be undefined before useEffect update\n    },\n    ...filteredNonMetadataKeys.map(e => ({\n      field: e,\n      width: widthsDebounced[e] || 100, // can be undefined before useEffect update\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return value ? <SanitizedHTML html={value} /> : ''\n      },\n    })),\n    ...filteredMetadataKeys.map(e => ({\n      field: e,\n      width: widthsDebounced[e] || 100, // can be undefined before useEffect update\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return value ? <SanitizedHTML html={value} /> : ''\n      },\n    })),\n  ]\n\n  const shownTrackIds = view.tracks.map(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (t: any) => t.configuration.trackId,\n  ) as string[]\n\n  const arrFilters = Object.entries(filters).filter(f => f[1].length > 0)\n  return (\n    <>\n      {info ? (\n        <JBrowseMenu\n          anchorEl={info?.target}\n          menuItems={session.getTrackActionMenuItems?.(info.conf) || []}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setInfo(undefined)\n          }}\n          open={!!info}\n          onClose={() => setInfo(undefined)}\n        />\n      ) : null}\n      <FacetedHeader\n        setHideSparse={setHideSparse}\n        setFilterText={setFilterText}\n        setUseShoppingCart={setUseShoppingCart}\n        hideSparse={hideSparse}\n        filterText={filterText}\n        useShoppingCart={useShoppingCart}\n        model={model}\n      />\n\n      <div\n        ref={ref}\n        style={{\n          display: 'flex',\n          overflow: 'hidden',\n          height: window.innerHeight * frac,\n          width: window.innerWidth * frac,\n        }}\n      >\n        <div\n          style={{\n            height: window.innerHeight * frac,\n            width: window.innerWidth * frac - panelWidth,\n          }}\n        >\n          <ResizeBar\n            checkbox\n            widths={Object.values(widths)}\n            setWidths={newWidths =>\n              setWidths(\n                Object.fromEntries(\n                  Object.entries(widths).map((entry, idx) => [\n                    entry[0],\n                    newWidths[idx],\n                  ]),\n                ),\n              )\n            }\n            scrollLeft={scrollLeft}\n          />\n          <DataGrid\n            rows={rows.filter(row =>\n              arrFilters.every(([key, val]) => val.includes(row[key])),\n            )}\n            columnVisibilityModel={visible}\n            onColumnVisibilityModelChange={newModel => setVisible(newModel)}\n            headerHeight={35}\n            checkboxSelection\n            disableSelectionOnClick\n            keepNonExistentRowsSelected\n            onSelectionModelChange={userSelectedIds => {\n              if (!useShoppingCart) {\n                const a1 = shownTrackIds\n                const a2 = userSelectedIds as string[]\n                // synchronize the user selection with the view\n                // see share https://stackoverflow.com/a/33034768/2129219\n                transaction(() => {\n                  a1.filter(x => !a2.includes(x)).map(t => view.hideTrack(t))\n                  a2.filter(x => !a1.includes(x)).map(t => view.showTrack(t))\n                })\n              } else {\n                const root = getRoot(model)\n                const schema = pluginManager.pluggableConfigSchemaType('track')\n                const tracks = userSelectedIds.map(id =>\n                  resolveIdentifier(schema, root, id),\n                )\n                model.setSelection(tracks)\n              }\n            }}\n            selectionModel={\n              useShoppingCart ? selection.map(s => s.trackId) : shownTrackIds\n            }\n            columns={columns}\n            rowHeight={25}\n          />\n        </div>\n        <ResizeHandle\n          vertical\n          onDrag={dist => setPanelWidth(panelWidth - dist)}\n          style={{ background: 'grey', width: 5 }}\n        />\n        <div\n          style={{ width: panelWidth, overflowY: 'auto', overflowX: 'hidden' }}\n        >\n          <FacetFilters\n            width={panelWidth - 10}\n            rows={rows}\n            columns={columns}\n            dispatch={dispatch}\n            filters={filters}\n          />\n        </div>\n      </div>\n    </>\n  )\n})\n","export function getRootKeys(obj: Record<string, unknown>) {\n  return Object.entries(obj)\n    .map(([key, val]) => (typeof val === 'string' ? key : ''))\n    .filter(f => !!f)\n}\n","import React from 'react'\nimport { DialogContent } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport FacetedSelector from './FacetedSelector'\n\nfunction FacetedDlg(props: {\n  handleClose: () => void\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { handleClose } = props\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      maxWidth=\"xl\"\n      title=\"Faceted track selector\"\n    >\n      <DialogContent>\n        <FacetedSelector {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(FacetedDlg)\n"],"names":["useStyles","makeStyles","theme","resizeBar","background","palette","action","disabledBackground","height","position","overflow","tick","pointerEvents","divider","width","hiddenTick","useResizeBar","ref","useRef","_useState","useState","_useState2","_slicedToArray","scrollLeft","setScrollLeft","useEffect","timer","setInterval","_ref$current","elt","current","querySelector","clearInterval","Tick","_ref","left","idx","onDrag","classes","cb","useCallback","d","_jsxs","_Fragment","children","_jsx","ResizeHandle","vertical","className","style","ResizeBar","_ref2","widths","setWidths","checkbox","_ref2$scrollLeft","offsets","init","i","length","distance","newWidths","_toConsumableArray","Math","max","map","FacetedHeader","setFilterText","setUseShoppingCart","setHideSparse","hideSparse","useShoppingCart","filterText","model","anchorEl","setAnchorEl","Grid","container","spacing","alignItems","item","TextField","label","value","onChange","event","target","InputProps","endAdornment","InputAdornment","IconButton","onClick","ClearIcon","currentTarget","MoreVert","ShoppingCart","Menu","open","onClose","onMenuItemClick","_event","callback","menuItems","type","checked","facet","margin","marginLeft","select","marginBottom","FacetFilter","column","vals","dispatch","filters","visible","setVisible","FormControl","display","Typography","field","Tooltip","title","key","val","size","MinimizeIcon","AddIcon","Select","multiple","native","options","len","selected","push","sort","a","b","localeCompare","_ref3","name","count","FacetFilters","_ref4","_step","rows","columns","facets","slice","uniqs","Map","_iterator","_createForOfIteratorHelper","s","n","done","_step2","row","_iterator2","entries","_step2$value","index","concat","get","undefined","set","err","e","f","nonMetadataKeys","frac","observer","_session$getTrackActi","assemblyNames","view","selection","pluginManager","getEnv","_useResizeBar","_useState3","_useState4","info","setInfo","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","panelWidth","setPanelWidth","assemblyName","session","getSession","filterDebounced","useDebounce","_useReducer","useReducer","state","update","_objectSpread","_defineProperty","_useReducer2","useMemo","trackConfigurations","filter","conf","matches","track","_readConfObject","_readConfObject2","metadata","readConfObject","id","trackId","getTrackName","category","join","adapter","description","filteredNonMetadataKeys","r","filteredMetadataKeys","Set","flatMap","obj","Object","fields","_useState11","measureGridWidth","maxWidth","stripHTML","fromEntries","_useState12","_useState13","c","_useState14","widthsDebounced","hideable","renderCell","params","SanitizedHTML","html","MoreHoriz","shownTrackIds","tracks","t","configuration","arrFilters","JBrowseMenu","getTrackActionMenuItems","call","window","innerHeight","innerWidth","values","entry","DataGrid","every","includes","columnVisibilityModel","onColumnVisibilityModelChange","newModel","headerHeight","checkboxSelection","disableSelectionOnClick","keepNonExistentRowsSelected","onSelectionModelChange","userSelectedIds","root","getRoot","schema","pluggableConfigSchemaType","resolveIdentifier","setSelection","a1","a2","transaction","x","hideTrack","showTrack","selectionModel","rowHeight","dist","overflowY","overflowX","props","handleClose","Dialog","DialogContent","FacetedSelector"],"sourceRoot":""}